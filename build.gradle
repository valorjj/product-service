plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id "com.google.osdetector" version "1.7.3"
	id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.4")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.okta.spring:okta-spring-boot-starter:3.0.5'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'org.springframework.cloud:spring-cloud-starter'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// netty 관련 오류 해결, 애플 실리콘 맥북에서만 발생하는 걸로 추정
	if (osdetector.arch == "aarch_64") {
		implementation("io.netty:netty-resolver-dns-native-macos:4.1.79.Final:osx-aarch_64")
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
	enabled = false
}


jib {
	// 베이스 이미지 설정
	from {
		image = "amazoncorretto:17"
		// https://github.com/GoogleContainerTools/jib/blob/master/docs/faq.md#how-do-i-specify-a-platform-in-the-manifest-list-or-oci-index-of-a-base-image
		platforms {
			platform {
				architecture = "arm64"
				os = "linux"
			}
		}
	}
	// 빌드하고자 하는 이미지 설정
	to {
		image = 'valorjj/product-service'
		tags = ['0.0.1', 'latest']
		auth {
			username = 'valorjj'
			password = 'dckr_pat_1COmBXt4gcOg0a2fL7OjhgOh9Pk'
		}
	}
	container {
		entrypoint = ['java', '-jar', '/productservice.jar']
		ports = ['8081']
		environment = [EUREKA_SERVER_ADDRESS: 'http://host.docker.internal:8761/eureka']
	}
}
